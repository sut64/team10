{"ast":null,"code":"var _jsxFileName = \"c:\\\\personnel\\\\frontend\\\\src\\\\components\\\\CreatePersonnel.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Select from \"@material-ui/core/Select\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Alert = props => {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Alert;\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    marginTop: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction CreatePersonnel() {\n  _s();\n\n  const classes = useStyles();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [bloodtype, setBloodType] = useState([]);\n  const [gender, setGender] = useState([]);\n  const [jobtitle, setJobTitle] = useState([]);\n  const [personnel, setPersonnel] = useState({});\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n  const apiUrl = \"http://localhost:8080\";\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSuccess(false);\n    setError(false);\n  };\n\n  const handleChange = event => {\n    const name = event.target.name;\n    setPersonnel({ ...personnel,\n      [name]: event.target.value\n    });\n  };\n\n  const handleInputChangeName = event => {\n    const id = event.target.id;\n    const {\n      value\n    } = event.target;\n    setPersonnel({ ...personnel,\n      [id]: value\n    });\n  };\n\n  const handleInputChangePersonalID = event => {\n    const id = event.target.id;\n    const {\n      value\n    } = event.target;\n    setPersonnel({ ...personnel,\n      [id]: value\n    });\n  };\n\n  const handleInputChangeTel = event => {\n    const id = event.target.id;\n    const {\n      value\n    } = event.target;\n    setPersonnel({ ...personnel,\n      [id]: value\n    });\n  };\n\n  const handleInputChangeAddress = event => {\n    const id = event.target.id;\n    const {\n      value\n    } = event.target;\n    setPersonnel({ ...personnel,\n      [id]: value\n    });\n  };\n\n  const handleInputChangeSalary = event => {\n    const id = event.target.id;\n    const {\n      value\n    } = event.target;\n    setPersonnel({ ...personnel,\n      [id]: value\n    });\n  };\n\n  const handleDateChange = date => {\n    console.log(date);\n    setSelectedDate(date);\n  };\n\n  const getBloodType = async () => {\n    fetch(`${apiUrl}/bloodtype`, requestOptions).then(response => response.json()).then(res => {\n      if (res.data) {\n        setBloodType(res.data);\n      } else {\n        console.log(\"else\");\n      }\n    });\n  };\n\n  const getGender = async () => {\n    fetch(`${apiUrl}/gender`, requestOptions).then(response => response.json()).then(res => {\n      if (res.data) {\n        setGender(res.data);\n      } else {\n        console.log(\"else\");\n      }\n    });\n  };\n\n  const getJobTitle = async () => {\n    fetch(`${apiUrl}/jobtitle`, requestOptions).then(response => response.json()).then(res => {\n      if (res.data) {\n        setJobTitle(res.data);\n      } else {\n        console.log(\"else\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    getBloodType();\n    getGender();\n    getJobTitle();\n  }, []);\n\n  const convertType = data => {\n    let val = typeof data === \"string\" ? parseInt(data) : data;\n    return val;\n  };\n\n  function submit() {\n    let data = {\n      Name: personnel.Name,\n      Personalid: personnel.Personalid,\n      BirthDay: selectedDate,\n      Tel: personnel.Tel,\n      Address: personnel.Address,\n      Salary: personnel.Salary,\n      GenderID: convertType(personnel.GenderID),\n      BloodTypeID: convertType(personnel.BloodTypeID),\n      JobTitleID: convertType(personnel.JobTitleID)\n    };\n    const requestOptionsPost = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(`${apiUrl}/personnel`, requestOptionsPost).then(response => response.json()).then(res => {\n      if (res.data) {\n        setSuccess(true);\n      } else {\n        setError(true);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: success,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: \"success\",\n        children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E2A\\u0E33\\u0E40\\u0E23\\u0E47\\u0E08\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: error,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: \"error\",\n        children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E44\\u0E21\\u0E48\\u0E2A\\u0E33\\u0E40\\u0E23\\u0E47\\u0E08\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          flexGrow: 1,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h2\",\n            variant: \"h6\",\n            color: \"primary\",\n            gutterBottom: true,\n            children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E1A\\u0E38\\u0E04\\u0E04\\u0E25\\u0E32\\u0E01\\u0E23\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"Name\",\n              variant: \"outlined\",\n              type: \"string\",\n              size: \"medium\",\n              placeholder: \"\\u0E01\\u0E23\\u0E38\\u0E13\\u0E32\\u0E01\\u0E23\\u0E2D\\u0E01\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E0A\\u0E37\\u0E48\\u0E2D\",\n              value: personnel.Name,\n              onChange: handleInputChangeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u0E40\\u0E1E\\u0E28\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              native: true,\n              value: personnel.GenderID,\n              onChange: handleChange,\n              inputProps: {\n                name: \"GenderID\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                \"aria-label\": \"None\",\n                value: \"\",\n                children: \"\\u0E01\\u0E23\\u0E38\\u0E13\\u0E32\\u0E23\\u0E30\\u0E1A\\u0E38\\u0E40\\u0E1E\\u0E28\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), gender.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.ID,\n                children: item.Genders\n              }, item.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u0E01\\u0E23\\u0E38\\u0E4A\\u0E1B\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              native: true,\n              value: personnel.BloodTypeID,\n              onChange: handleChange,\n              inputProps: {\n                name: \"BloodTypeID\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                \"aria-label\": \"None\",\n                value: \"\",\n                children: \"\\u0E01\\u0E23\\u0E38\\u0E13\\u0E32\\u0E23\\u0E30\\u0E1A\\u0E38\\u0E01\\u0E23\\u0E38\\u0E4A\\u0E1B\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E14\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), bloodtype.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.ID,\n                children: item.BloodType\n              }, item.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u0E2D\\u0E32\\u0E0A\\u0E35\\u0E1E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              native: true,\n              value: personnel.JobTitleID,\n              onChange: handleChange,\n              inputProps: {\n                name: \"JobTitleID\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                \"aria-label\": \"None\",\n                value: \"\",\n                children: \"\\u0E01\\u0E23\\u0E38\\u0E13\\u0E32\\u0E23\\u0E30\\u0E1A\\u0E38\\u0E2D\\u0E32\\u0E0A\\u0E35\\u0E1E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), jobtitle.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.ID,\n                children: item.Job\n              }, item.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u0E27\\u0E31\\u0E19\\u0E40\\u0E01\\u0E34\\u0E14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n              utils: DateFnsUtils,\n              children: /*#__PURE__*/_jsxDEV(KeyboardDateTimePicker, {\n                name: \"BirthDay\",\n                value: selectedDate,\n                onChange: handleDateChange,\n                label: \"\\u0E01\\u0E23\\u0E38\\u0E13\\u0E32\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\\u0E27\\u0E31\\u0E19\\u0E40\\u0E01\\u0E34\\u0E14\",\n                minDate: new Date(\"1900-01-01T00:00\"),\n                format: \"yyyy/MM/dd hh:mm a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            component: RouterLink,\n            to: \"/personnel\",\n            variant: \"contained\",\n            children: \"\\u0E01\\u0E25\\u0E31\\u0E1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              float: \"right\"\n            },\n            variant: \"contained\",\n            onClick: submit,\n            color: \"primary\",\n            children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePersonnel, \"wFwRmWIdFXZm2c2gGsO/p98deUU=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = CreatePersonnel;\nexport default CreatePersonnel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"CreatePersonnel\");","map":{"version":3,"sources":["c:/personnel/frontend/src/components/CreatePersonnel.tsx"],"names":["useEffect","useState","Link","RouterLink","makeStyles","createStyles","Button","FormControl","Container","Paper","Grid","Box","Typography","Divider","Snackbar","Select","MuiAlert","TextField","MuiPickersUtilsProvider","KeyboardDateTimePicker","DateFnsUtils","Alert","props","useStyles","theme","root","flexGrow","container","marginTop","spacing","paper","padding","color","palette","text","secondary","CreatePersonnel","classes","selectedDate","setSelectedDate","Date","bloodtype","setBloodType","gender","setGender","jobtitle","setJobTitle","personnel","setPersonnel","success","setSuccess","error","setError","apiUrl","requestOptions","method","headers","handleClose","event","reason","handleChange","name","target","value","handleInputChangeName","id","handleInputChangePersonalID","handleInputChangeTel","handleInputChangeAddress","handleInputChangeSalary","handleDateChange","date","console","log","getBloodType","fetch","then","response","json","res","data","getGender","getJobTitle","convertType","val","parseInt","submit","Name","Personalid","BirthDay","Tel","Address","Salary","GenderID","BloodTypeID","JobTitleID","requestOptionsPost","body","JSON","stringify","map","item","ID","Genders","BloodType","Job","float"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  alpha,\r\n} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { BloodTypeInterface } from \"../models/IBloodtype\";\r\nimport { GenderInterface } from \"../models/IGender\";\r\nimport { JobTitleInterface } from \"../models/IJobtitle\";\r\nimport { PersonnelInterface } from \"../models/IPersonnel\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDateTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nconst Alert = (props: AlertProps) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    container: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  })\r\n);\r\n\r\nfunction CreatePersonnel() {\r\n  const classes = useStyles();\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const [bloodtype, setBloodType] = useState<BloodTypeInterface[]>([]);\r\n  const [gender, setGender] = useState<GenderInterface []>([]);\r\n  const [jobtitle, setJobTitle] = useState<JobTitleInterface[]>([]);\r\n  const [personnel, setPersonnel] = useState<Partial<PersonnelInterface>>(\r\n    {}\r\n  );\r\n\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const apiUrl = \"http://localhost:8080\";\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSuccess(false);\r\n    setError(false);\r\n  };\r\n\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    const name = event.target.name as keyof typeof personnel;\r\n    setPersonnel({\r\n      ...personnel,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n  \r\n  const handleInputChangeName = (\r\n    event: React.ChangeEvent<{ id?: string; value: any }>\r\n  ) => {\r\n    const id = event.target.id as keyof typeof personnel;\r\n    const { value } = event.target;\r\n    setPersonnel({ ...personnel, [id]: value });\r\n  };\r\n  const handleInputChangePersonalID = (\r\n    event: React.ChangeEvent<{ id?: string; value: any }>\r\n  ) => {\r\n    const id = event.target.id as keyof typeof personnel;\r\n    const { value } = event.target;\r\n    setPersonnel({ ...personnel, [id]: value });\r\n  };\r\n  const handleInputChangeTel = (\r\n    event: React.ChangeEvent<{ id?: string; value: any }>\r\n  ) => {\r\n    const id = event.target.id as keyof typeof personnel;\r\n    const { value } = event.target;\r\n    setPersonnel({ ...personnel, [id]: value });\r\n  };\r\n  const handleInputChangeAddress = (\r\n    event: React.ChangeEvent<{ id?: string; value: any }>\r\n  ) => {\r\n    const id = event.target.id as keyof typeof personnel;\r\n    const { value } = event.target;\r\n    setPersonnel({ ...personnel, [id]: value });\r\n  };\r\n  const handleInputChangeSalary = (\r\n    event: React.ChangeEvent<{ id?: string; value: any }>\r\n  ) => {\r\n    const id = event.target.id as keyof typeof personnel;\r\n    const { value } = event.target;\r\n    setPersonnel({ ...personnel, [id]: value });\r\n  };\r\n\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    console.log(date);\r\n    setSelectedDate(date);\r\n  };\r\n\r\n\r\n\r\n\r\n  const getBloodType = async () => {\r\n    fetch(`${apiUrl}/bloodtype`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setBloodType(res.data);\r\n        } else {\r\n          console.log(\"else\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const getGender = async () => {\r\n    fetch(`${apiUrl}/gender`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setGender(res.data);\r\n        } else {\r\n          console.log(\"else\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const getJobTitle = async () => {\r\n    fetch(`${apiUrl}/jobtitle`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setJobTitle(res.data);\r\n        } else {\r\n          console.log(\"else\");\r\n        }\r\n      });\r\n  };\r\n  \r\n\r\n  \r\n  useEffect(() => {\r\n    getBloodType();\r\n    getGender();\r\n    getJobTitle();\r\n  }, []);\r\n\r\n  const convertType = (data: string | number | undefined) => {\r\n    let val = typeof data === \"string\" ? parseInt(data) : data;\r\n    return val;\r\n  };\r\n\r\n\r\n  function submit() {\r\n\r\n    let data = {\r\n        Name:       personnel.Name,\r\n\t    Personalid:  personnel.Personalid,  \r\n\t    BirthDay:    selectedDate,\r\n\t    Tel    :     personnel.Tel,\r\n\t    Address :    personnel.Address,\r\n\t    Salary :     personnel.Salary,\r\n        GenderID : convertType(personnel.GenderID),\r\n        BloodTypeID: convertType(personnel.BloodTypeID),\r\n        JobTitleID: convertType(personnel.JobTitleID),\r\n    };\r\n\r\n    const requestOptionsPost = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(`${apiUrl}/personnel`, requestOptionsPost)\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setSuccess(true);\r\n        } else {\r\n          setError(true);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <Container className={classes.container} maxWidth=\"md\">\r\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          บันทึกข้อมูลสำเร็จ\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar open={error} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          บันทึกข้อมูลไม่สำเร็จ\r\n        </Alert>\r\n      </Snackbar>\r\n      <Paper className={classes.paper}>\r\n        <Box display=\"flex\">\r\n          <Box flexGrow={1}>\r\n            <Typography\r\n              component=\"h2\"\r\n              variant=\"h6\"\r\n              color=\"primary\"\r\n              gutterBottom\r\n            >\r\n              บันทึกข้อมูลบุคคลากร\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Divider />\r\n        <Grid container spacing={3} className={classes.root}>\r\n        <Grid item xs={12}>\r\n            <p>ชื่อ</p>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <TextField\r\n                id=\"Name\"\r\n                variant =\"outlined\"\r\n                type=\"string\"\r\n                size=\"medium\"\r\n                placeholder=\"กรุณากรอกข้อมูลชื่อ\"\r\n                value={personnel.Name}\r\n                onChange={handleInputChangeName}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        <Grid item xs={3}>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <p>เพศ</p>\r\n              <Select\r\n                native\r\n                value={personnel.GenderID}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  name: \"GenderID\",\r\n                }}\r\n              >\r\n                <option aria-label=\"None\" value=\"\">\r\n                  กรุณาระบุเพศ\r\n                </option>\r\n                {gender.map((item: GenderInterface) => (\r\n                  <option value={item.ID} key={item.ID}>\r\n                    {item.Genders}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <p>กรุ๊ปเลือด</p>\r\n              <Select\r\n                native\r\n                value={personnel.BloodTypeID}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  name: \"BloodTypeID\",\r\n                }}\r\n              >\r\n                <option aria-label=\"None\" value=\"\">\r\n                  กรุณาระบุกรุ๊ปเลือด\r\n                </option>\r\n                {bloodtype.map((item: BloodTypeInterface) => (\r\n                  <option value={item.ID} key={item.ID}>\r\n                    {item.BloodType}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <p>อาชีพ</p>\r\n              <Select\r\n                native\r\n                value={personnel.JobTitleID}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  name: \"JobTitleID\",\r\n                }}\r\n              >\r\n                <option aria-label=\"None\" value=\"\">\r\n                  กรุณาระบุอาชีพ\r\n                </option>\r\n                {jobtitle.map((item: JobTitleInterface) => (\r\n                  <option value={item.ID} key={item.ID}>\r\n                    {item.Job}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <p>วันเกิด</p>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDateTimePicker\r\n                  name=\"BirthDay\"\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  label=\"กรุณาเลือกวันเกิด\"\r\n                  minDate={new Date(\"1900-01-01T00:00\")}\r\n                  format=\"yyyy/MM/dd hh:mm a\"\r\n                />\r\n\r\n              </MuiPickersUtilsProvider>\r\n            </FormControl>\r\n          </Grid>\r\n          \r\n        \r\n         \r\n          <Grid item xs={12}>\r\n            <Button\r\n              component={RouterLink}\r\n              to=\"/personnel\"\r\n              variant=\"contained\"\r\n            >\r\n              กลับ\r\n            </Button>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              variant=\"contained\"\r\n              onClick={submit}\r\n              color=\"primary\"\r\n            >\r\n              บันทึก\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CreatePersonnel;\r\n"]},"metadata":{},"sourceType":"module"}